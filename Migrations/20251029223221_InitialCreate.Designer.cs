// <auto-generated />
using ClipBoard.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClipBoard.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20251029223221_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("ClipBoard.Models.ClipGroupRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ClipGroups", (string)null);
                });

            modelBuilder.Entity("ClipBoard.Models.ClipRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClipGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CopyHotKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasteHotKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ClipGroupId", "SortOrder");

                    b.ToTable("Clips", (string)null);
                });

            modelBuilder.Entity("ClipBoard.Models.ClipRecord", b =>
                {
                    b.HasOne("ClipBoard.Models.ClipGroupRecord", "ClipGroup")
                        .WithMany("Clips")
                        .HasForeignKey("ClipGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClipGroup");
                });

            modelBuilder.Entity("ClipBoard.Models.ClipGroupRecord", b =>
                {
                    b.Navigation("Clips");
                });
#pragma warning restore 612, 618
        }
    }
}
